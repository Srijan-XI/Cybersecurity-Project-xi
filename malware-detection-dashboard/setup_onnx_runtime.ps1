# PowerShell script to download and setup ONNX Runtime for C++

# Configuration
$onnxRuntimeVersion = "1.16.3"  # Update this to the latest version as needed
$downloadUrl = "https://github.com/microsoft/onnxruntime/releases/download/v$onnxRuntimeVersion/onnxruntime-win-x64-$onnxRuntimeVersion.zip"
$downloadPath = "onnxruntime-win-x64-$onnxRuntimeVersion.zip"
$extractPath = ".\onnxruntime"

# Create directory if it doesn't exist
if (-not (Test-Path -Path $extractPath)) {
    New-Item -Path $extractPath -ItemType Directory | Out-Null
    Write-Host "Created directory: $extractPath"
}

# Download ONNX Runtime
Write-Host "Downloading ONNX Runtime v$onnxRuntimeVersion..."
try {
    Invoke-WebRequest -Uri $downloadUrl -OutFile $downloadPath
    Write-Host "Download complete: $downloadPath"
}
catch {
    Write-Host "Error downloading ONNX Runtime: $_" -ForegroundColor Red
    exit 1
}

# Extract the archive
Write-Host "Extracting files to $extractPath..."
try {
    Expand-Archive -Path $downloadPath -DestinationPath $extractPath -Force
    # Move files from the nested directory to our target directory
    $nestedDir = Get-ChildItem -Path $extractPath -Directory | Select-Object -First 1
    if ($nestedDir) {
        Get-ChildItem -Path $nestedDir.FullName | Move-Item -Destination $extractPath
        Remove-Item -Path $nestedDir.FullName
    }
    Write-Host "Extraction complete"
}
catch {
    Write-Host "Error extracting files: $_" -ForegroundColor Red
    exit 1
}

# Clean up the zip file
Remove-Item -Path $downloadPath
Write-Host "Removed temporary download file"

# Copy DLL to current directory for easy access
try {
    $dllPath = Join-Path -Path $extractPath -ChildPath "lib\onnxruntime.dll"
    Copy-Item -Path $dllPath -Destination "." -Force
    Write-Host "Copied onnxruntime.dll to current directory"
}
catch {
    Write-Host "Error copying DLL: $_" -ForegroundColor Red
}

# Create a compile batch file
$compileBat = @"
@echo off
g++ malware_detector.cpp -o malware_detector -I"$extractPath\include" -L"$extractPath\lib" -lonnxruntime
if %ERRORLEVEL% equ 0 (
    echo Compilation successful!
    echo Running malware detector...
    echo.
    malware_detector "$extractPath\models\test_model.onnx" demo_files\suspicious_tool.exe
) else (
    echo Compilation failed.
)
pause
"@

Set-Content -Path "compile_malware_detector.bat" -Value $compileBat
Write-Host "Created compilation script: compile_malware_detector.bat"

# Print next steps
Write-Host "`n===== Setup Complete =====" -ForegroundColor Green
Write-Host "ONNX Runtime has been set up in the $extractPath directory."
Write-Host "To compile and run the malware detector:"
Write-Host "1. Run the compile_malware_detector.bat script"
Write-Host "2. If compilation is successful, the detector will run automatically"
Write-Host "3. For manual execution: malware_detector <model_path> <file_to_analyze>"
Write-Host "======================================================="